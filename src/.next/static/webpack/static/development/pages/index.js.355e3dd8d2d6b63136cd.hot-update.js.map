{"version":3,"file":"static/webpack/static/development/pages/index.js.355e3dd8d2d6b63136cd.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import { Component } from 'react';\n\nclass Index extends Component {\n  componentDidMount() {\n    const IPFS = require('ipfs');\n    const OrbitDB = require('orbit-db');\n\n    // OrbitDB uses Pubsub which is an experimental feature\n    // and need to be turned on manually.\n    // Note that these options need to be passed to IPFS in\n    // all examples even if not specified so.\n    const ipfsOptions = {\n      EXPERIMENTAL: {\n        pubsub: true\n      }\n    };\n\n    // Create IPFS instance\n    const ipfs = new IPFS(ipfsOptions);\n\n    ipfs.on('error', (error: Error) => {\n      console.error(error)\n    });\n\n    ipfs.on('ready', async () => {\n      const orbitdb = await OrbitDB.createInstance(ipfs)\n\n      // Create / Open a database\n      const db = await orbitdb.log('hello')\n      await db.load()\n\n      // Listen for updates from peers\n      db.events.on('replicated', () => {\n        console.log(db.iterator({ limit: -1 }).collect())\n      })\n\n      // Add an entry\n      const hash = await db.add('world')\n      console.log(hash)\n\n      // Query\n      const result = db.iterator({ limit: -1 }).collect()\n      console.log(JSON.stringify(result, null, 2))\n    })\n\n    this.setState\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AADA;AADA;AACA;AAMA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AACA;AADA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAXA;AAAA;AACA;AADA;AAaA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AACA;;;AAEA;AACA;AACA;;;;AAhDA;AACA;AAkDA;;;;A","sourceRoot":""}